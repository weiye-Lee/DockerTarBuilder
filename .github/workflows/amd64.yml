name: x86-64 Pull and Save Docker Image

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest'
      release_tag:
        description: '请填写release tag'
        required: true
        default: 'v0.0.1'
      release_name:
        description: '请填写release name'
        required: true
        default: 'Initial Release'

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
          docker system prune -a -f
          docker volume prune -f

    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          docker pull "${image}" --platform "linux/amd64"
          docker save "${image}" -o "${image//\//_}-amd64.tar"
        done

    - name: Compress the TAR files
      run: tar -czf x86-64-images.tar.gz *-amd64.tar

    - name: Split the compressed file
      run: split -b 500m x86-64-images.tar.gz x86-64-images-part-

    - name: List split files
      id: list_files
      run: ls x86-64-images-part-*

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        release_name: ${{ github.event.inputs.release_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in x86-64-images-part-*; do
          echo "Uploading $file..."
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"$file" \
            "${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)"
        done
